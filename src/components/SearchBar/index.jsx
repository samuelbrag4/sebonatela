"use client";

import React, { useState } from "react";
import styles from "./searchBar.module.css";

export default function SearchBar({ onSearch, onCategorySelect, onSort }) {
  const [query, setQuery] = useState("");
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);

  const categories = [
    "Administra√ß√£o, Neg√≥cios e Economia",
    "Arte, Cinema e Fotografia",
    "Artesanato, Casa e Estilo de Vida",
    "Autoajuda",
    "Biografias e Hist√≥rias Reais",
    "Ci√™ncias",
    "Computa√ß√£o, Inform√°tica e M√≠dias Digitais",
    "Cr√¥nicas, Humor e Entretenimento",
    "Direito",
    "Educa√ß√£o, Refer√™ncia e Did√°ticos",
    "Engenharia e Transporte",
    "Er√≥tico",
    "Esportes e Lazer",
    "Fantasia, Horror e Fic√ß√£o Cient√≠fica",
    "Gastronomia e Culin√°ria",
    "Hist√≥ria",
    "HQs, Mang√°s e Graphic Novels",
    "Infantil",
    "LGBTQ+",
    "Literatura e Fic√ß√£o",
    "Medicina",
    "Policial, Suspense e Mist√©rio",
    "Pol√≠tica, Filosofia e Ci√™ncias Sociais",
    "Religi√£o e Espiritualidade",
    "Romance",
    "Sa√∫de e Fam√≠lia",
    "Turismo e Guias de Viagem",
    "Livros Internacionais",
    "Jovens e Adolescentes",
  ];

  const handleSearch = () => {
    if (query.trim() !== "") {
      onSearch(query); // Chama a fun√ß√£o passada como prop para realizar a busca
    }
  };

  const handleCategoryClick = (category) => {
    onCategorySelect(category); // Chama a fun√ß√£o passada como prop para buscar pela categoria
    setIsDropdownOpen(false); // Fecha o dropdown
  };

  const handleSortChange = (event) => {
    onSort(event.target.value); // Chama a fun√ß√£o passada como prop para ordenar os livros
  };

  return (
    <div className={styles.searchBar}>
      <div className={styles.searchContainer}>
        <input
          type="text"
          placeholder="Digite o t√≠tulo, autor ou g√™nero"
          className={styles.searchInput}
          value={query}
          onChange={(e) => setQuery(e.target.value)} // Atualiza o estado com o valor do input
        />
        <button className={styles.searchButton} onClick={handleSearch}>
          üîç Buscar
        </button>
      </div>

      <div className={styles.categoriesDropdown}>
        <button
          className={styles.dropdownButton}
          onClick={() => setIsDropdownOpen(!isDropdownOpen)}
        >
          Categorias
        </button>
        {isDropdownOpen && (
          <div className={styles.dropdownMenu}>
            {categories.map((category) => (
              <div
                key={category}
                className={styles.dropdownItem}
                onClick={() => handleCategoryClick(category)}
              >
                {category}
              </div>
            ))}
          </div>
        )}
      </div>

      <div className={styles.sortContainer}>
        <label htmlFor="sort">Ordenar:</label>
        <select
          id="sort"
          className={styles.sortSelect}
          onChange={handleSortChange}
        >
          <option value="asc">A-Z</option>
          <option value="desc">Z-A</option>
        </select>
      </div>
    </div>
  );
}